{"ast":null,"code":"var _jsxFileName = \"/Users/karthikreddy/Desktop/React/Projects/Little_Lemon_Restaurant/Frontend/src/Pages/Registeruser.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterUser = () => {\n  _s();\n  const navigate = useNavigate();\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\"); // to store validation message\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [zipcode, setZipcode] = useState(\"\");\n  const [error, setError] = useState(\"\"); // To store any error message\n  const [successMessage, setSuccessMessage] = useState(\"\"); // To store success message\n  const [isLoading, setIsLoading] = useState(false); // For showing loading state\n\n  // Function to validate email format\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Password validation\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return; // Stop further execution if passwords don't match\n    }\n    if (!validateEmail(email)) {\n      setError(\"Please enter a valid email address.\");\n      return;\n    }\n    const userData = {\n      fullName,\n      email,\n      password,\n      address,\n      city,\n      country,\n      state,\n      zipcode\n    };\n    setIsLoading(true); // Set loading state to true\n\n    try {\n      // Make a POST request to your backend to register the user\n      const response = await axios.post(\"http://localhost:5001/register\", userData);\n      if (response.status === 201) {\n        // On successful registration, show success message and redirect after a delay\n        setSuccessMessage(\"Registration successful! Redirecting to login page...\");\n        setTimeout(() => {\n          navigate(\"/login\");\n        }, 3000); // Redirect to login after 3 seconds\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error.response ? error.response.data : error);\n\n      // Check for specific backend error\n      if (error.response && error.response.status === 400) {\n        setError(error.response.data.message || \"There was an issue with your registration. Please try again.\");\n      } else {\n        setError(\"There was an issue with your registration. Please try again.\");\n      }\n    } finally {\n      setIsLoading(false); // Set loading state back to false\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen p-6 bg-gray-100 flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container max-w-screen-lg mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-semibold text-xl text-gray-600\",\n          children: \"Create Your Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 mb-6\",\n          children: \"Join us and start enjoying exclusive perks. Please complete the form below to register.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded shadow-lg p-4 px-4 md:p-8 mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"grid gap-4 gap-y-2 text-sm grid-cols-1 lg:grid-cols-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-medium text-lg\",\n                children: \"Personal Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"We value your time! Fill out all fields to complete your registration and unlock a world of exclusive offers.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lg:col-span-2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid gap-4 gap-y-2 text-sm grid-cols-1 md:grid-cols-5\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:col-span-5\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"full_name\",\n                    children: \"Full Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"full_name\",\n                    id: \"full_name\",\n                    className: \"h-10 border mt-1 rounded px-4 w-full bg-gray-50\",\n                    value: fullName,\n                    onChange: e => {\n                      const value = e.target.value;\n                      // Only allow letters and spaces\n                      if (/^[a-zA-Z\\s]*$/.test(value)) {\n                        setFullName(value);\n                      }\n                    },\n                    placeholder: \"Enter your full name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:col-span-5\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"email\",\n                    children: \"Email Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"email\",\n                    id: \"email\",\n                    className: \"h-10 border mt-1 rounded px-4 w-full bg-gray-50\",\n                    value: email,\n                    onChange: e => {\n                      const value = e.target.value;\n                      setEmail(value);\n\n                      // Real-time validation\n                      if (value && !validateEmail(value)) {\n                        setEmailError(\"Please enter a valid email address\");\n                      } else {\n                        setEmailError(\"\"); // clear error if valid\n                      }\n                    },\n                    placeholder: \"email@domain.com\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 41\n                  }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-orange-500 text-sm mt-1\",\n                    children: emailError\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:col-span-5\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"password\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    name: \"password\",\n                    id: \"password\",\n                    className: \"h-10 border mt-1 rounded px-4 w-full bg-gray-50\",\n                    value: password,\n                    onChange: e => setPassword(e.target.value),\n                    placeholder: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:col-span-5\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"confirmPassword\",\n                    children: \"Confirm Passwor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    name: \"confirmPassword\",\n                    id: \"confirmPassword\",\n                    className: \"h-10 border mt-1 rounded px-4 w-full bg-gray-50\",\n                    value: confirmPassword,\n                    onChange: e => {\n                      const value = e.target.value;\n                      setConfirmPassword(value);\n                      setPasswordError(value !== password ? \"Passwords do not match\" : \"\");\n                    },\n                    placeholder: \"Confirm Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 41\n                  }, this), confirmPassword.length > 0 && passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-orange-500 text-sm mt-1\",\n                    children: passwordError\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:col-span-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"address\",\n                    children: \"Address / Street\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"address\",\n                    id: \"address\",\n                    className: \"h-10 border mt-1 rounded px-4 w-full bg-gray-50\",\n                    value: address,\n                    placeholder: \"Enter full street address\",\n                    onChange: e => setAddress(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:col-span-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"city\",\n                    children: \"City\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"city\",\n                    id: \"city\",\n                    className: \"h-10 border mt-1 rounded px-4 w-full bg-gray-50\",\n                    value: city,\n                    placeholder: \"City\",\n                    onChange: e => setCity(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:col-span-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"country\",\n                    children: \"Country / Region\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"country\",\n                    id: \"country\",\n                    className: \"h-10 border mt-1 rounded px-4 w-full bg-gray-50\",\n                    value: country,\n                    placeholder: \"Country\",\n                    onChange: e => setCountry(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:col-span-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"state\",\n                    children: \"State / Province\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"state\",\n                    id: \"state\",\n                    className: \"h-10 border mt-1 rounded px-4 w-full bg-gray-50\",\n                    value: state,\n                    placeholder: \"State\",\n                    onChange: e => setState(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:col-span-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"zipcode\",\n                    children: \"Zipcode\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"zipcode\",\n                    id: \"zipcode\",\n                    className: \"transition-all flex items-center h-10 border mt-1 rounded px-4 w-full bg-gray-50\",\n                    value: zipcode,\n                    placeholder: \"5 Digit ZipCode\",\n                    onChange: e => setZipcode(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"md:col-span-5 text-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"inline-flex items-end mt-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n                      disabled: isLoading // Disable button when loading\n                      ,\n                      children: isLoading ? \"Registering...\" : \"Register\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-center mt-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 27\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 text-center mt-4\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 36\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterUser, \"P69IbSkLzQNOqwerMVGWvFHn1EA=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterUser;\nexport default RegisterUser;\nvar _c;\n$RefreshReg$(_c, \"RegisterUser\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","RegisterUser","_s","navigate","fullName","setFullName","email","setEmail","emailError","setEmailError","password","setPassword","passwordError","setPasswordError","confirmPassword","setConfirmPassword","address","setAddress","city","setCity","country","setCountry","state","setState","zipcode","setZipcode","error","setError","successMessage","setSuccessMessage","isLoading","setIsLoading","validateEmail","emailRegex","test","handleSubmit","e","preventDefault","userData","response","post","status","setTimeout","console","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","name","id","value","onChange","target","placeholder","length","disabled","_c","$RefreshReg$"],"sources":["/Users/karthikreddy/Desktop/React/Projects/Little_Lemon_Restaurant/Frontend/src/Pages/Registeruser.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst RegisterUser = () => {\n    const navigate = useNavigate();\n\n    const [fullName, setFullName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [emailError, setEmailError] = useState(\"\"); // to store validation message\n    const [password, setPassword] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [country, setCountry] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const [zipcode, setZipcode] = useState(\"\");\n    const [error, setError] = useState(\"\");  // To store any error message\n    const [successMessage, setSuccessMessage] = useState(\"\");  // To store success message\n    const [isLoading, setIsLoading] = useState(false);  // For showing loading state\n\n    // Function to validate email format\n    const validateEmail = (email) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(email);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Password validation\n        if (password !== confirmPassword) {\n            setError(\"Passwords do not match.\");\n            return; // Stop further execution if passwords don't match\n        }\n\n        if (!validateEmail(email)) {\n            setError(\"Please enter a valid email address.\");\n            return;\n        }\n\n        const userData = {\n            fullName,\n            email,\n            password,\n            address,\n            city,\n            country,\n            state,\n            zipcode,\n        };\n\n        setIsLoading(true);  // Set loading state to true\n\n        try {\n            // Make a POST request to your backend to register the user\n            const response = await axios.post(\"http://localhost:5001/register\", userData);\n\n            if (response.status === 201) {\n                // On successful registration, show success message and redirect after a delay\n                setSuccessMessage(\"Registration successful! Redirecting to login page...\");\n                setTimeout(() => {\n                    navigate(\"/login\");\n                }, 3000);  // Redirect to login after 3 seconds\n            }\n        } catch (error) {\n            console.error(\"Registration error:\", error.response ? error.response.data : error);\n\n            // Check for specific backend error\n            if (error.response && error.response.status === 400) {\n                setError(error.response.data.message || \"There was an issue with your registration. Please try again.\");\n            } else {\n                setError(\"There was an issue with your registration. Please try again.\");\n            }\n        } finally {\n            setIsLoading(false);  // Set loading state back to false\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen p-6 bg-gray-100 flex items-center justify-center\">\n            <div className=\"container max-w-screen-lg mx-auto\">\n                <div>\n                    <h2 className=\"font-semibold text-xl text-gray-600\">Create Your Account</h2>\n                    <p className=\"text-gray-500 mb-6\">Join us and start enjoying exclusive perks. Please complete the\n                        form below to register.</p>\n\n                    <div className=\"bg-white rounded shadow-lg p-4 px-4 md:p-8 mb-6\">\n                        <form onSubmit={handleSubmit} className=\"grid gap-4 gap-y-2 text-sm grid-cols-1 lg:grid-cols-3\">\n                            <div className=\"text-gray-600\">\n                                <p className=\"font-medium text-lg\">Personal Information</p>\n                                <p>We value your time! Fill out all fields to complete your registration and unlock a\n                                    world of exclusive offers.</p>\n                            </div>\n\n                            <div className=\"lg:col-span-2\">\n                                <div className=\"grid gap-4 gap-y-2 text-sm grid-cols-1 md:grid-cols-5\">\n                                    {/* Full Name */}\n                                    <div className=\"md:col-span-5\">\n                                        <label htmlFor=\"full_name\">Full Name</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"full_name\"\n                                            id=\"full_name\"\n                                            className=\"h-10 border mt-1 rounded px-4 w-full bg-gray-50\"\n                                            value={fullName}\n                                            onChange={(e) => {\n                                                const value = e.target.value;\n                                                // Only allow letters and spaces\n                                                if (/^[a-zA-Z\\s]*$/.test(value)) {\n                                                    setFullName(value);\n                                                }\n                                            }}\n                                            placeholder=\"Enter your full name\"\n                                        />\n                                    </div>\n\n                                    {/* Email Address */}\n                                    <div className=\"md:col-span-5\">\n                                        <label htmlFor=\"email\">Email Address</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"email\"\n                                            id=\"email\"\n                                            className=\"h-10 border mt-1 rounded px-4 w-full bg-gray-50\"\n                                            value={email}\n                                            onChange={(e) => {\n                                                const value = e.target.value;\n                                                setEmail(value);\n\n                                                // Real-time validation\n                                                if (value && !validateEmail(value)) {\n                                                    setEmailError(\"Please enter a valid email address\");\n                                                } else {\n                                                    setEmailError(\"\"); // clear error if valid\n                                                }\n                                            }}\n                                            placeholder=\"email@domain.com\"\n                                        />\n                                        {emailError && (\n                                            <p className=\"text-orange-500 text-sm mt-1\">{emailError}</p>\n                                        )}\n                                    </div>\n\n                                    {/*Password*/}\n                                    <div className=\"md:col-span-5\">\n                                        <label htmlFor=\"password\">Password</label>\n                                        <input\n                                            type=\"password\"\n                                            name=\"password\"\n                                            id=\"password\"\n                                            className=\"h-10 border mt-1 rounded px-4 w-full bg-gray-50\"\n                                            value={password}\n                                            onChange={(e) => setPassword(e.target.value)}\n                                            placeholder=\"Password\"\n                                        />\n                                    </div>\n\n                                    {/* Confirm Password */}\n                                    <div className=\"md:col-span-5\">\n                                        <label htmlFor=\"confirmPassword\">Confirm Passwor</label>\n                                        <input\n                                            type=\"password\"\n                                            name=\"confirmPassword\"\n                                            id=\"confirmPassword\"\n                                            className=\"h-10 border mt-1 rounded px-4 w-full bg-gray-50\"\n                                            value={confirmPassword}\n                                            onChange={(e) => {\n                                                const value = e.target.value;\n                                                setConfirmPassword(value);\n                                                setPasswordError(value !== password ? \"Passwords do not match\" : \"\");\n                                            }}\n                                            placeholder=\"Confirm Password\"\n                                        />\n                                        {confirmPassword.length > 0 && passwordError && (\n                                            <p className=\"text-orange-500 text-sm mt-1\">{passwordError}</p>\n                                        )}\n                                    </div>\n\n                                    {/* Address */}\n                                    <div className=\"md:col-span-3\">\n                                        <label htmlFor=\"address\">Address / Street</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"address\"\n                                            id=\"address\"\n                                            className=\"h-10 border mt-1 rounded px-4 w-full bg-gray-50\"\n                                            value={address}\n                                            placeholder=\"Enter full street address\"\n                                            onChange={(e) => setAddress(e.target.value)}\n                                        />\n                                    </div>\n\n                                    {/* City */}\n                                    <div className=\"md:col-span-2\">\n                                        <label htmlFor=\"city\">City</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"city\"\n                                            id=\"city\"\n                                            className=\"h-10 border mt-1 rounded px-4 w-full bg-gray-50\"\n                                            value={city}\n                                            placeholder=\"City\"\n                                            onChange={(e) => setCity(e.target.value)}\n                                        />\n                                    </div>\n\n                                    {/* Country */}\n                                    <div className=\"md:col-span-2\">\n                                        <label htmlFor=\"country\">Country / Region</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"country\"\n                                            id=\"country\"\n                                            className=\"h-10 border mt-1 rounded px-4 w-full bg-gray-50\"\n                                            value={country}\n                                            placeholder=\"Country\"\n                                            onChange={(e) => setCountry(e.target.value)}\n                                        />\n                                    </div>\n\n                                    {/* State */}\n                                    <div className=\"md:col-span-2\">\n                                        <label htmlFor=\"state\">State / Province</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"state\"\n                                            id=\"state\"\n                                            className=\"h-10 border mt-1 rounded px-4 w-full bg-gray-50\"\n                                            value={state}\n                                            placeholder=\"State\"\n                                            onChange={(e) => setState(e.target.value)}\n                                        />\n                                    </div>\n\n                                    {/* Zipcode */}\n                                    <div className=\"md:col-span-1\">\n                                        <label htmlFor=\"zipcode\">Zipcode</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"zipcode\"\n                                            id=\"zipcode\"\n                                            className=\"transition-all flex items-center h-10 border mt-1 rounded px-4 w-full bg-gray-50\"\n                                            value={zipcode}\n                                            placeholder=\"5 Digit ZipCode\"\n                                            onChange={(e) => setZipcode(e.target.value)}\n                                        />\n                                    </div>\n\n                                    {/* Submit Button */}\n                                    <div className=\"md:col-span-5 text-right\">\n                                        <div className=\"inline-flex items-end mt-3\">\n                                            <button\n                                                type=\"submit\"\n                                                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n                                                disabled={isLoading} // Disable button when loading\n                                            >\n                                                {isLoading ? \"Registering...\" : \"Register\"}\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n                {error && <p className=\"text-red-500 text-center mt-4\">{error}</p>}\n                {successMessage && <p className=\"text-green-500 text-center mt-4\">{successMessage}</p>} {/* Success message */}\n            </div>\n        </div>\n    );\n};\n\nexport default RegisterUser;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}